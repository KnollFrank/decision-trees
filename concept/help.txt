Entscheidungsbäume
==================

- https://machinelearningmastery.com/implement-decision-tree-algorithm-scratch-python/
- https://medium.com/@penggongting/implementing-decision-tree-from-scratch-in-python-c732e7c69aea
- http://sigmajs.org/
- https://lamastex.github.io/scalable-data-science/sds/2/2/db/016_SupervisedClustering_DecisionTrees_HandWrittenDigitRecognition/
- https://transcranial.github.io/keras-js/#/mnist-cnn

C:\Users\Alfa\AppData\Local\Programs\Python\Python38-32\python.exe

Abhängigkeiten:
- https://www.papaparse.com/
- https://visjs.org/ oder https://almende.github.io/vis/
- https://datatables.net/
- vielleicht: https://github.com/deThread/dethread

Install:
npm init
npm install express
npm install formidable

Um Dateiänderungen im laufenden Node.js-Betrieb aufzunehmen:
npm install -g nodemon
nodemon webserver.js

node webserver.js

FK-TODO:
- Laden/Speichern eines Modells für Entscheidungsbäume (= Graph)
- Aufteilung des Datensatzes in 80% Trainingsdaten und 20% Testdaten
- Togglebutton einbauen, um die Berechnung des Entscheidungsbaums
  1. lokal im Browser durchzuführen oder
  2. mit node.js auf dem Server durchzuführen. Progressbar für den aktuellen Stand des Algorithmus dann mit Websockets auf dem Client anzeigen.
     - Datei für die Eingabedaten auf den server hochladen
	 - build_tree auf dem Server ausführen
	 - Ergebnis von build_tree an den Client zurücksenden
- build_tree auf mehrere Browser aufteilen, jeder Browser berechnet einen Kindknoten.
