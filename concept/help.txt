Entscheidungsbäume
==================

- https://machinelearningmastery.com/implement-decision-tree-algorithm-scratch-python/
- https://medium.com/@penggongting/implementing-decision-tree-from-scratch-in-python-c732e7c69aea
- http://sigmajs.org/
- https://lamastex.github.io/scalable-data-science/sds/2/2/db/016_SupervisedClustering_DecisionTrees_HandWrittenDigitRecognition/
- https://transcranial.github.io/keras-js/#/mnist-cnn
- http://matt.might.net/articles/by-example-continuation-passing-style/

C:\Users\Alfa\AppData\Local\Programs\Python\Python38-32\python.exe

Abhängigkeiten:
- https://www.papaparse.com/
- https://visjs.org/ oder https://almende.github.io/vis/
- https://datatables.net/
- vielleicht: https://github.com/deThread/dethread, https://github.com/deThread/dethread-demo-applications
- https://socket.io/docs/client-api/
- https://www.kaggle.com/oddrationale/mnist-in-csv

Install:
npm init
npm install express
npm install socket.io
npm install formidable
npm install --S dethread

Um Dateiänderungen im laufenden Node.js-Betrieb aufzunehmen:
npm install -g nodemon
nodemon webserver.js

node webserver.js

FK-TODO:
- Beim Malen einer Ziffer in den canvas im Ergebnis in einen 20x20-Canvas malen lassen und ihn anschließend in einem
  28x28-Canvas zentrieren, denn so sind die MNIST-Ziffern erzeugt worden.
- K-Nearest Neighbors für MNIST implementieren (https://www.classes.cs.uchicago.edu/archive/2015/spring/12300-1/pa2.html)
- Train- und Trestdatensatz getrennt voneinander auswählbar machen über Dateidialog.
